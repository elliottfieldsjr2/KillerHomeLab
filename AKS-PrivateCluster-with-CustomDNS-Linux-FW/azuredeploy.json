{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": { 
    "TimeZone": {
      "type": "string",
      "defaultValue": "Eastern Standard Time",
      "allowedValues": [
        "Afghanistan Standard Time",
        "Alaskan Standard Time",
        "Aleutian Standard Time",
        "Altai Standard Time",
        "Arab Standard Time",
        "Arabian Standard Time",
        "Arabic Standard Time",
        "Argentina Standard Time",
        "Astrakhan Standard Time",
        "Atlantic Standard Time",
        "AUS Central Standard Time",
        "Aus Central W. Standard Time",
        "AUS Eastern Standard Time",
        "Azerbaijan Standard Time",
        "Azores Standard Time",
        "Bahia Standard Time",
        "Bangladesh Standard Time",
        "Belarus Standard Time",
        "Bougainville Standard Time",
        "Canada Central Standard Time",
        "Cape Verde Standard Time",
        "Caucasus Standard Time",
        "Cen. Australia Standard Time",
        "Central America Standard Time",
        "Central Asia Standard Time",
        "Central Brazilian Standard Time",
        "Central Europe Standard Time",
        "Central European Standard Time",
        "Central Pacific Standard Time",
        "Central Standard Time (Mexico)",
        "Central Standard Time",
        "Chatham Islands Standard Time",
        "China Standard Time",
        "Cuba Standard Time",
        "Dateline Standard Time",
        "E. Africa Standard Time",
        "E. Australia Standard Time",
        "E. Europe Standard Time",
        "E. South America Standard Time",
        "Easter Island Standard Time",
        "Eastern Standard Time (Mexico)",
        "Eastern Standard Time",
        "Egypt Standard Time",
        "Ekaterinburg Standard Time",
        "Fiji Standard Time",
        "FLE Standard Time",
        "Georgian Standard Time",
        "GMT Standard Time",
        "Greenland Standard Time",
        "Greenwich Standard Time",
        "GTB Standard Time",
        "Haiti Standard Time",
        "Hawaiian Standard Time",
        "India Standard Time",
        "Iran Standard Time",
        "Israel Standard Time",
        "Jordan Standard Time",
        "Kaliningrad Standard Time",
        "Korea Standard Time",
        "Libya Standard Time",
        "Line Islands Standard Time",
        "Lord Howe Standard Time",
        "Magadan Standard Time",
        "Magallanes Standard Time",
        "Marquesas Standard Time",
        "Mauritius Standard Time",
        "Middle East Standard Time",
        "Montevideo Standard Time",
        "Morocco Standard Time",
        "Mountain Standard Time (Mexico)",
        "Mountain Standard Time",
        "Myanmar Standard Time",
        "N. Central Asia Standard Time",
        "Namibia Standard Time",
        "Nepal Standard Time",
        "New Zealand Standard Time",
        "Newfoundland Standard Time",
        "Norfolk Standard Time",
        "North Asia East Standard Time",
        "North Asia Standard Time",
        "North Korea Standard Time",
        "Omsk Standard Time",
        "Pacific SA Standard Time",
        "Pacific Standard Time (Mexico)",
        "Pacific Standard Time",
        "Pakistan Standard Time",
        "Paraguay Standard Time",
        "Qyzylorda Standard Time",
        "Romance Standard Time",
        "Russia Time Zone 10",
        "Russia Time Zone 11",
        "Russia Time Zone 3",
        "Russian Standard Time",
        "SA Eastern Standard Time",
        "SA Pacific Standard Time",
        "SA Western Standard Time",
        "Saint Pierre Standard Time",
        "Sakhalin Standard Time",
        "Samoa Standard Time",
        "Sao Tome Standard Time",
        "Saratov Standard Time",
        "SE Asia Standard Time",
        "Singapore Standard Time",
        "South Africa Standard Time",
        "Sri Lanka Standard Time",
        "Sudan Standard Time",
        "Syria Standard Time",
        "Taipei Standard Time",
        "Tasmania Standard Time",
        "Tocantins Standard Time",
        "Tokyo Standard Time",
        "Tomsk Standard Time",
        "Tonga Standard Time",
        "Transbaikal Standard Time",
        "Turkey Standard Time",
        "Turks And Caicos Standard Time",
        "Ulaanbaatar Standard Time",
        "US Eastern Standard Time",
        "US Mountain Standard Time",
        "UTC",
        "UTC+12",
        "UTC+13",
        "UTC-02",
        "UTC-08",
        "UTC-09",
        "UTC-11",
        "Venezuela Standard Time",
        "Vladivostok Standard Time",
        "Volgograd Standard Time",
        "W. Australia Standard Time",
        "W. Central Africa Standard Time",
        "W. Europe Standard Time",
        "W. Mongolia Standard Time",
        "West Asia Standard Time",
        "West Bank Standard Time",
        "West Pacific Standard Time",
        "Yakutsk Standard Time"
      ],      
      "metadata": {
          "description": "Time Zone"
      }
    },                
    "adminUsername": {
        "type": "string",
        "metadata": {
            "description": "The name of the Administrator of the new VM and Domain"
        }
    },
    "adminPassword": {
        "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "adminKey": {
        "type": "securestring",
      "metadata": {
        "description": "The SSH Public Key for the Administrator account on Linux VM"
      }
    },           
    "WindowsServerLicenseType": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "Windows_Server"
      ],      
      "metadata": {
          "description": "Windows Server OS License Type"
      }
    },   
    "WindowsClientLicenseType": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "Windows_Client"
      ],      
      "metadata": {
          "description": "Windows Client OS License Type"
      }
    },                          
    "NamingConvention": {
      "type": "string",
      "defaultValue": "khl",
      "maxLength": 4,       
      "metadata": {
        "description": "Naming Convention for Lab Objects"
      }
    }, 
    "SubDNSDomain": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Sub DNS Domain Name Example:  sub1. must include a DOT AT END"
      }
    },     
    "SubDNSBaseDN": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Sub DNS Domain Name Example:  DC=sub2,DC=sub1, must include COMMA AT END"
      }
    },            
    "NetBiosDomain": {
      "type": "string",
      "defaultValue": "killerhomelab",
      "maxLength": 15,      
      "metadata": {
          "description": "NetBios Parent Domain Name"
      }
    },  
    "InternalDomain": {
      "type": "string",
      "defaultValue": "killerhomelab",
      "metadata": {
          "description": "NetBios Domain Name"
      }
    },       
    "InternalTLD": {
      "type": "string",
      "defaultValue": "com",
      "allowedValues": [
        "com",
        "net",
        "org",
        "edu",
        "gov",
        "mil"
      ],      
      "metadata": {
          "description": "Top-Level Domain Name"
      }
    },      
    "LocalDNSDomain": {
      "type": "string",
      "defaultValue": "dns.local",
      "metadata": {
        "description": "Local DNS Domain for DNS Proxy"
      }
    },     
    "vnet0ID": {
      "type": "string",
      "defaultValue": "10.1",
      "metadata": {
        "description": "OnPrem VNet Prefix"
      }
    },  
    "vnet1ID": {
      "type": "string",
      "defaultValue": "10.20",
      "metadata": {
        "description": "Spoke VNet Prefix"
      }
    },  
    "vnet2ID": {
      "type": "string",
      "defaultValue": "10.21",
      "metadata": {
        "description": "Hub VNet Prefix"
      }
    },
    "PODID": {
      "type": "string",
      "defaultValue": "10.30",
      "metadata": {
        "description": "POD Network ID"
      }
    },    
    "serviceID": {
      "type": "string",
      "defaultValue": "10.31",
      "metadata": {
        "description": "Service Network ID"
      }
    },        
    "ReverseLookup0": {
      "type": "string",
      "defaultValue": "1.10",
      "metadata": {
          "description": "DC Reverse Lookup Zone1 Prefix"
      }
    },    
    "ReverseLookup1": {
      "type": "string",
      "defaultValue": "21.10",
      "metadata": {
          "description": "DNS Reverse Lookup Zone1 Prefix"
      }
    },                            
    "roleAssignmentGuid": {
        "type": "string",
        "defaultValue": "[newGuid()]",        
        "metadata": {
            "description": "A new GUID used to identify the role assignment"
        }
    },  
    "DNSOSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2019-Datacenter",
          "2016-Datacenter",
          "2012-R2-Datacenter"
        ],
        "metadata": {
            "description": "DNS Proxy OS Version"
        }
    },
    "DC1OSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2019-Datacenter",
          "2016-Datacenter",
          "2012-R2-Datacenter"
        ],
        "metadata": {
            "description": "Domain Controller1 OS Version"
        }
    },
    "WKOSVersion": {
      "type": "string",
      "defaultValue": "19h1-pro",
      "allowedValues": [
        "19h1-pro"
      ],
      "metadata": {
          "description": "Workstation OS Version"
      }
  },        
    "DNSVMSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
            "description": "DNS PRoxy VMSize"
        }
    },
    "DC1VMSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
            "description": "Domain Controller1 VMSize"
        }
    },        
    "WKVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
          "description": "Workstation VMSize"
      }
    },                                                                            
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
    }
  },
  "variables": {
    "vnet0Name": "[concat(parameters('NamingConvention'),'-OnPrem-VNet')]",
    "vnet0Prefix": "[concat(parameters('vnet0ID'),'.0.0/16')]",
    "vnet0subnet1Name": "[concat(parameters('NamingConvention'),'-OnPrem-VNet-Subnet1')]",    
    "vnet0subnet1Prefix": "[concat(parameters('vnet0ID'),'.1.0/24')]",    
    "vnet0subnet2Name": "[concat(parameters('NamingConvention'),'-OnPrem-VNet-Subnet2')]",    
    "vnet0subnet2Prefix": "[concat(parameters('vnet0ID'),'.2.0/24')]",    
    "vnet0BastionsubnetPrefix": "[concat(parameters('vnet0ID'),'.253.0/24')]",        
    "vnet1Name": "[concat(parameters('NamingConvention'),'-Spoke-VNet')]",
    "vnet1Prefix": "[concat(parameters('vnet1ID'),'.0.0/16')]",
    "vnet1subnet1Name": "[concat(parameters('NamingConvention'),'-Spoke-VNet-Subnet1')]",    
    "vnet1subnet1Prefix": "[concat(parameters('vnet1ID'),'.1.0/24')]",    
    "vnet1subnet2Name": "[concat(parameters('NamingConvention'),'-Spoke-VNet-Subnet2')]",    
    "vnet1subnet2Prefix": "[concat(parameters('vnet1ID'),'.2.0/24')]",    
    "vnet1BastionsubnetPrefix": "[concat(parameters('vnet1ID'),'.253.0/24')]",  
    "vnet2Name": "[concat(parameters('NamingConvention'),'-Hub-VNet')]",
    "vnet2Prefix": "[concat(parameters('vnet2ID'),'.0.0/16')]",
    "vnet2subnet1Name": "[concat(parameters('NamingConvention'),'-Hub-VNet-Subnet1')]",    
    "vnet2subnet1Prefix": "[concat(parameters('vnet2ID'),'.1.0/24')]",    
    "vnet2subnet2Name": "[concat(parameters('NamingConvention'),'-Hub-VNet-Subnet2')]",    
    "vnet2subnet2Prefix": "[concat(parameters('vnet2ID'),'.2.0/24')]",    
    "vnet2BastionsubnetPrefix": "[concat(parameters('vnet2ID'),'.253.0/24')]",        
    "vnet2FirewallsubnetPrefix": "[concat(parameters('vnet2ID'),'.254.0/24')]",   
    "FirewallName1": "[concat(parameters('NamingConvention'),'-Hub-FW')]",               
    "DockerBridgeCIDR": "17.17.0.1/16",              
    "podCIDR": "[concat(parameters('podID'),'.0.0/16')]",                          
    "serviceCIDR": "[concat(parameters('serviceID'),'.0.0/16')]",                                                
    "AKSDnsserviceIP": "[concat(parameters('serviceID'),'.1.10')]",            
    "dnslastoctet": "101",       
    "dnsname": "[concat(parameters('NamingConvention'),'-dns-proxy')]",   
    "dnsIP": "[concat(parameters('vnet2ID'),'.1.',variables('dnslastoctet'))]",
    "dc1name": "[concat(parameters('NamingConvention'),'-dc-01')]",           
    "dc1IP": "[concat(parameters('vnet0ID'),'.1.',variables('dc1lastoctet'))]",        
    "dc1lastoctet": "101",        
    "wk0lastoctet": "201",            
    "wk0name": "[concat(parameters('NamingConvention'),'-wk-op')]",           
    "wk0IP": "[concat(parameters('vnet0ID'),'.2.',variables('wk0lastoctet'))]",        
    "wk1lastoctet": "201",            
    "wk1name": "[concat(parameters('NamingConvention'),'-wk-spk')]",           
    "wk1IP": "[concat(parameters('vnet1ID'),'.2.',variables('wk1lastoctet'))]",            
    "DCDataDisk1Name": "NTDS",            
    "InternaldomainName": "[concat(parameters('SubDNSDomain'),parameters('InternalDomain'),'.',parameters('InternalTLD'))]",
    "BaseDN": "[concat(parameters('SubDNSBaseDN'),'DC=',parameters('InternalDomain'),',DC=',parameters('InternalTLD'))]",
    "WKOUPath": "[concat('OU=Windows 10,OU=Workstations,',variables('BaseDN'))]",          
    "ReverseLookup0": "[concat('1.',parameters('ReverseLookup0'))]", 
    "ReverseLookup1": "[concat('1.',parameters('ReverseLookup1'))]",               
    "PrivateDNSZoneName": "[concat('privatelink.',resourceGroup().location,'.cx.aks.containerservice.azure.us')]",
    "AKSClusterName": "[concat(parameters('NamingConvention'),'-AKS-Private-Cluster')]",
    "ManagedIDName": "[concat(parameters('NamingConvention'),'-mi-', uniqueString(resourceGroup().id))]",
    "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
  },  
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployOnPremVNet",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet0Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet0Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet0subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet0subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet0subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet0subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet0BastionsubnetPrefix')]"
              },
              "FirewallsubnetPrefix": {
                "value": "[variables('VNet2FirewallsubnetPrefix')]"
              },                           
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployHubVNet",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet2Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet2subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet2subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet2subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet2subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet2BastionsubnetPrefix')]"
              },   
              "FirewallsubnetPrefix": {
                "value": "[variables('VNet2FirewallsubnetPrefix')]"
              },                         
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployHubBastionHost",
      "dependsOn": [
        "DeployHubVNet"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet2Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },                
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeploySpokeVNet",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet1subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet1subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },
              "FirewallsubnetPrefix": {
                "value": "[variables('VNet2FirewallsubnetPrefix')]"
              },                            
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromHubToSpoke",
      "dependsOn": [
        "DeployHubVNet",
        "DeploySpokeVNet"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet2Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet1Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },  
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromSpokeToHub",
      "dependsOn": [
        "PeeringFromHubToSpoke"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet1Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet2Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromHubToOnPrem",
      "dependsOn": [
        "DeployHubVNet",
        "DeployONPremVNet"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet2Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet0Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromOnPremToHub",
      "dependsOn": [
        "PeeringFromHubToOnPrem"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet0Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet2Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },            
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployPrivateDNSZone",
      "dependsOn": [
        "DeployOnPremVNet",
        "DeployHubVNet",
        "DeploySpokeVNet",
        "PeeringFromHubToSpoke",
        "PeeringFromSpokeToHub",   
        "PeeringFromHubToOnPrem",      
        "PeeringFromOnPremToHub"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/PrivateDNSZone.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ZoneName": {
                  "value": "[variables('PrivateDNSZoneName')]"
              },
              "vnet1Name": {
                "value": "[variables('VNet1Name')]"
              },    
              "vnet2Name": {
                "value": "[variables('VNet2Name')]"
              }                                                                                                                                                                              
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployDNSProxy",
      "dependsOn": [
        "DeployHubVNet"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dnsname')]"
              },
              "computerIP": {
                  "value": "[variables('dnsIP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('DNSOSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },                       
              "VMSize": {
                "value": "[parameters('DNSVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet2Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet2subnet1Name')]"
              },                                                                                                                       
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "ConfigureDNSProxy",
      "dependsOn": [
        "deployDNSProxy"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/configdnsproxy.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dnsname')]"
              },
              "computerIP": {
                  "value": "[variables('dnsIP')]"
              },              
              "TimeZone": {
                  "value": "[parameters('TimeZone')]"
              },                          
              "AKSDNSZone": {
                "value": "[variables('PrivateDNSZoneName')]"
              },  
              "InternalDomainName": {
                "value": "[variables('InternalDomainName')]"
              }, 
              "DC1IP": {
                "value": "[variables('dc1ip')]"
              },                                            
              "LocalDNSDomain": {
                "value": "[parameters('LocalDNSDomain')]"
              },              
              "ReverseLookup": {
                "value": "[variables('ReverseLookup1')]"
              },                                                                                                            
              "dnslastoctet": {
                "value": "[variables('dnslastoctet')]"
              },                                                                                                                                       
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                           
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "updatevnet1dns",
      "dependsOn": [
        "ConfigureDNSProxy"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/updatevnetdns.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                "value": "[variables('vnet1subnet1Name')]"
              },                                                                                                            
              "subnet1Prefix": {
                "value": "[variables('vnet1subnet1Prefix')]"
              }, 
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },                                                                                                            
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },               
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },    
              "FirewallsubnetPrefix": {
                "value": "[variables('VNet2FirewallsubnetPrefix')]"
              },                                      
              "DNSServerIP": {
                "value": [
                  "[variables('dnsIP')]"
                ]
              },                                                                                                            
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },   
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "updatevnet2dns",
      "dependsOn": [
        "ConfigureDNSProxy"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/updatevnetdns.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet2Prefix')]"
              },
              "subnet1Name": {
                "value": "[variables('vnet2subnet1Name')]"
              },                                                                                                            
              "subnet1Prefix": {
                "value": "[variables('vnet2subnet1Prefix')]"
              }, 
              "subnet2Name": {
                "value": "[variables('vnet2subnet2Name')]"
              },                                                                                                            
              "subnet2Prefix": {
                "value": "[variables('vnet2subnet2Prefix')]"
              },               
              "BastionsubnetPrefix": {
                "value": "[variables('vnet2BastionsubnetPrefix')]"
              },   
              "FirewallsubnetPrefix": {
                "value": "[variables('VNet2FirewallsubnetPrefix')]"
              },                                       
              "DNSServerIP": {
                "value": [
                  "[variables('dnsIP')]"
                ]
              },                                                                                                            
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },   
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "RestartDNSProxy",
      "dependsOn": [
        "updatevnet2dns"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/restartvm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dnsname')]"
              },
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                                         
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },                             
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateManagedID",   
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/managedidentity.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ManagedIDName": {
                  "value": "[variables('ManagedIDName')]"
              },
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AssignManagedIDRG",
      "dependsOn": [
        "DeployPrivateDNSZone",
        "RestartDNSProxy",
        "CreateManagedID"
      ],        
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "PrincipalID": {
                  "value": "[reference('CreateManagedID').outputs.principalId.value]"
              },
              "RoleDefinitionID": {
                  "value": "[variables('Contributor')]"
              },
              "roleAssignmentGuid": {
                  "value": "[parameters('roleAssignmentGuid')]"
              }              
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployAKSCluster",     
      "dependsOn": [
        "AssignManagedIDRG"
      ],  
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/privateakscluster.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "AKSClusterName": {
                "value": "[variables('AKSClusterName')]"
            },
            "vnetName": {
                "value": "[variables('vnet1Name')]"
            },            
            "subnetName": {
                "value": "[variables('vnet1subnet1Name')]"
            },  
            "podCidr": {
                "value": "[variables('podCIDR')]"
            },
            "serviceCidr": {
                "value": "[variables('serviceCIDR')]"
            },
            "dnsServiceIP": {
                "value": "[variables('AKSDNSserviceIP')]"
            },
            "dockerBridgeCidr": {
                "value": "[variables('DockerBridgeCIDR')]"
            },                                    
            "DNSZoneName": {
                "value": "[variables('PrivateDNSZoneName')]"
            },     
            "ManagedIDName": {
                "value": "[variables('ManagedIDName')]"
            },   
            "adminUsername": {
              "value": "[parameters('adminUsername')]"
            }, 
            "adminKey": {
              "value": "[parameters('adminKey')]"
            },                                      
            "location": {
                "value": "[resourceGroup().location]"
            }                                                                                                                   
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployWK1VM",
      "dependsOn": [
        "DeploySpokeVNet",        
        "DeployAKSCluster"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('wk1name')]"
              },
              "computerIP": {
                  "value": "[variables('wk1IP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsDesktop"
              },
              "Offer": {
                  "value": "Windows-10"
              },
              "OSVersion": {
                "value": "[parameters('WKOSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsClientLicenseType')]"
              },              
              "VMSize": {
                "value": "[parameters('WKVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet1Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet1subnet2Name')]"
              },                                                                                                                    
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployDC1VM",
      "dependsOn": [
        "DeployOnPremVNet"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-2disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dc1name')]"
              },
              "computerIP": {
                  "value": "[variables('dc1IP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('DC1OSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "DataDisk1Name": {
                "value": "[variables('DCDataDisk1Name')]"
              },            
              "VMSize": {
                "value": "[parameters('DC1VMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet0Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet0subnet1Name')]"
              },                                                                                                                       
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "promotedc1",
      "dependsOn": [
        "DeployDC1VM"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/firstdc.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dc1name')]"
              },
              "TimeZone": {
                  "value": "[parameters('TimeZone')]"
              },               
              "NetBiosDomain": {
                  "value": "[parameters('NetBiosDomain')]"
              },
              "DomainName": {
                "value": "[variables('InternaldomainName')]"
              },              
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              }, 
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                           
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "updatevnet0dns",
      "dependsOn": [
        "promotedc1"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/updatevnetdns.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet0Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet0Prefix')]"
              },
              "subnet1Name": {
                "value": "[variables('vnet0subnet1Name')]"
              },                                                                                                            
              "subnet1Prefix": {
                "value": "[variables('vnet0subnet1Prefix')]"
              }, 
              "subnet2Name": {
                "value": "[variables('vnet0subnet2Name')]"
              },                                                                                                            
              "subnet2Prefix": {
                "value": "[variables('vnet0subnet2Prefix')]"
              },               
              "BastionsubnetPrefix": {
                "value": "[variables('vnet0BastionsubnetPrefix')]"
              },                         
              "DNSServerIP": {
                "value": [
                  "[variables('dc1IP')]"
                ]
              },                                                                                                            
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "restartdc1",
      "dependsOn": [
        "updatevnet0dns"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/restartvm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dc1name')]"
              },
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                                         
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "configdns",
      "dependsOn": [
        "restartdc1"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/configdns.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dc1name')]"
              },
              "NetBiosDomain": {
                  "value": "[parameters('NetBiosDomain')]"
              }, 
              "AKSDNSZone": {
                "value": "[variables('PrivateDNSZoneName')]"
              },   
              "DNSIP": {
                "value": "[variables('dnsip')]"
              },                           
              "InternalDomainName": {
                "value": "[variables('InternalDomainName')]"
              },              
              "ReverseLookup1": {
                "value": "[variables('ReverseLookup0')]"
              },                                                                                                            
              "dc1lastoctet": {
                "value": "[variables('dc1lastoctet')]"
              },  
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                       
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                           
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "createous",
      "dependsOn": [
        "configdns"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/createous.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('dc1name')]"
              },
              "BaseDN": {
                "value": "[variables('BaseDN')]"
              },              
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                           
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployWK0VM",
      "dependsOn": [
        "restartdc1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('wk0name')]"
              },
              "computerIP": {
                  "value": "[variables('wk0IP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsDesktop"
              },
              "Offer": {
                  "value": "Windows-10"
              },
              "OSVersion": {
                "value": "[parameters('WKOSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsClientLicenseType')]"
              },              
              "VMSize": {
                "value": "[parameters('WKVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet0Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet0subnet2Name')]"
              },                                                                                                                    
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DomainJoinWK0VM",
      "dependsOn": [
        "DeployWK0VM"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/domainjoin.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('wk0name')]"
              },
              "domainName": {
                  "value": "[variables('InternalDomainName')]"
              },
              "OUPath": {
                  "value": "[variables('WKOUPath')]"
              },
              "domainJoinOptions": {
                  "value": 3
              },
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                                                                                                                                                             
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployAzureFirewall1",
      "dependsOn": [
        "DMZVNet1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/AzureFirewall.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "FirewallName": {
                  "value": "[variables('FirewallName1')]"
              },
              "vnetName": {
                  "value": "[variables('VNet2Name')]"
              },
              "subnetName": {
                  "value": "AzureFirewallSubnet"
              },         
              "VNet0Prefix": {
                  "value": "[variables('VNet0Prefix')]"
              },         
              "VNet1Prefix": {
                  "value": "[variables('VNet1Prefix')]"
              },
              "VNet2Prefix": {
                  "value": "[variables('VNet2Prefix')]"
              },         
              "DC1IP": {
                  "value": "[variables('dc1IP')]"
              },                               
              "DNSIP": {
                  "value": "[variables('dnsIP')]"
              },     
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }                                                                                                            
  ]
}